# trained model, inference results, visualised images will be saved in model_dir
model_dir: path/to/model_dir

label_file_path: path/to/label.csv
n_extra_channels:0
train_x_dirs:
    - path/to/train_x_dir1
    - path/to/train_x_dir2
train_extra_x_dirs:

train_y_dirs:
    - path/to/train_y_dir1
    - path/to/train_y_dir2

valid_x_dirs:
    - path/to/valid_x_dir1
    - path/to/valid_x_dir2

valid_extra_x_dirs:


valid_y_dirs:
    - path/to/valid_y_dir1
    - path/to/valid_y_dir2

# below is to inference and visualise.
test_x_dirs:
    - path/to/test_x_dir1
    - path/to/test_x_dir2
#if you don't use the value, write "~" like below.
#test_data_paths: ~

test_extra_x_dirs:

which_to_inference:
    #- train
    #- valid
    - test
which_to_visualise:
    #- train
    #- valid
    - test

# below is training setting
# choose one for output_activation.
# softmax: one pixel belong to one category.
# sigmoid: one pixel can belong to two or more categories.
output_activation: softmax
batch_size: 16
n_epochs: 350
use_devices: "0" # if you want to do distributed learning, write like "0,1,2".
image_size: [256,256]
optimizer: Adam #Adam or Nadam or SGD

# Choose one for loss function.
# CE: cross entropy
# FL: focal loss
# GDL: generalized dice loss
loss: FL

# Choose one fore metrics
# IoU: Intersection over Union. Jaccard index.
# F1score  : F1score. F measure. Dice coefficient.
metrics: IoU

# True, if you want to check metrics for each label.
check_categorical_metrics: True

# True or False
use_tensorboard: True
# default is model_dir
tensorboard_dir: /home/taniguchi-j/shokusei/okayama/result

# below is not supported now.
# The length of class_weight must be same as the number of labels.
# If you write class_weight to "~", treated all classes as having same weight.
# If sum of class_weigths is not 1, automaticaly set as such.
# class_weight: ~
#class_weight:
#    - 0.1
#    - 0.8
#    - 0.1
#class_weight:
#    - 100
#    - 200
